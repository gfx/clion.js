/*
 This file is automatically generated by tool/meta.PL.
 */
// module meta
"use strict";
// auto-generated constants
/** @enum {int} */
var C = {
    ASSEMBLY_PROCESSOR               : 0,
    ASSEMBLY_HASH_ALG                : 0,
    ASSEMBLY_MAJOR_VERSION           : 1,
    ASSEMBLY_PROCESSOR_SIZE          : 1,
    ASSEMBLY_MINOR_VERSION           : 2,
    ASSEMBLY_BUILD_NUMBER            : 3,
    ASSEMBLY_REV_NUMBER              : 4,
    ASSEMBLY_FLAGS                   : 5,
    ASSEMBLY_PUBLIC_KEY              : 6,
    ASSEMBLY_NAME                    : 7,
    ASSEMBLY_CULTURE                 : 8,
    ASSEMBLY_SIZE                    : 9,
    ASSEMBLYOS_PLATFORM              : 0,
    ASSEMBLYOS_MAJOR_VERSION         : 1,
    ASSEMBLYOS_MINOR_VERSION         : 2,
    ASSEMBLYOS_SIZE                  : 3,
    ASSEMBLYREF_MAJOR_VERSION        : 0,
    ASSEMBLYREF_MINOR_VERSION        : 1,
    ASSEMBLYREF_BUILD_NUMBER         : 2,
    ASSEMBLYREF_REV_NUMBER           : 3,
    ASSEMBLYREF_FLAGS                : 4,
    ASSEMBLYREF_PUBLIC_KEY           : 5,
    ASSEMBLYREF_NAME                 : 6,
    ASSEMBLYREF_CULTURE              : 7,
    ASSEMBLYREF_HASH_VALUE           : 8,
    ASSEMBLYREF_SIZE                 : 9,
    ASSEMBLYREFOS_PLATFORM           : 0,
    ASSEMBLYREFOS_MAJOR_VERSION      : 1,
    ASSEMBLYREFOS_MINOR_VERSION      : 2,
    ASSEMBLYREFOS_ASSEMBLYREF        : 3,
    ASSEMBLYREFOS_SIZE               : 4,
    ASSEMBLYREFPROC_PROCESSOR        : 0,
    ASSEMBLYREFPROC_ASSEMBLYREF      : 1,
    ASSEMBLYREFPROC_SIZE             : 2,
    BEGIN_DECLS                      : 1,
    CALL_DEFAULT                     : 0,
    CALL_C                           : 1,
    CALL_STDCALL                     : 2,
    CALL_THISCALL                    : 3,
    CALL_FASTCALL                    : 4,
    CALL_VARARG                      : 5,
    CLASS_LAYOUT_PACKING_SIZE        : 0,
    CLASS_LAYOUT_CLASS_SIZE          : 1,
    CLASS_LAYOUT_PARENT              : 2,
    CLASS_LAYOUT_SIZE                : 3,
    CONSTANT_TYPE                    : 0,
    CONSTANT_PADDING                 : 1,
    CONSTANT_PARENT                  : 2,
    CONSTANT_VALUE                   : 3,
    CONSTANT_SIZE                    : 4,
    CUSTOM_ATTR_TYPE_TYPEREF         : 0,
    CUSTOM_ATTR_METHODDEF            : 0,
    CUSTOM_ATTR_PARENT               : 0,
    CUSTOM_ATTR_TYPE                 : 1,
    CUSTOM_ATTR_FIELDDEF             : 1,
    CUSTOM_ATTR_TYPE_TYPEDEF         : 1,
    CUSTOM_ATTR_VALUE                : 2,
    CUSTOM_ATTR_TYPE_METHODDEF       : 2,
    CUSTOM_ATTR_TYPEREF              : 2,
    CUSTOM_ATTR_TYPE_BITS            : 3,
    CUSTOM_ATTR_TYPEDEF              : 3,
    CUSTOM_ATTR_TYPE_MEMBERREF       : 3,
    CUSTOM_ATTR_SIZE                 : 3,
    CUSTOM_ATTR_TYPE_STRING          : 4,
    CUSTOM_ATTR_PARAMDEF             : 4,
    CUSTOM_ATTR_INTERFACE            : 5,
    CUSTOM_ATTR_BITS                 : 5,
    CUSTOM_ATTR_MEMBERREF            : 6,
    CUSTOM_ATTR_TYPE_MASK            : 7,
    CUSTOM_ATTR_MODULE               : 7,
    CUSTOM_ATTR_PERMISSION           : 8,
    CUSTOM_ATTR_PROPERTY             : 9,
    CUSTOM_ATTR_EVENT                : 10,
    CUSTOM_ATTR_SIGNATURE            : 11,
    CUSTOM_ATTR_MODULEREF            : 12,
    CUSTOM_ATTR_TYPESPEC             : 13,
    CUSTOM_ATTR_ASSEMBLY             : 14,
    CUSTOM_ATTR_ASSEMBLYREF          : 15,
    CUSTOM_ATTR_FILE                 : 16,
    CUSTOM_ATTR_EXP_TYPE             : 17,
    CUSTOM_ATTR_MANIFEST             : 18,
    CUSTOM_ATTR_GENERICPAR           : 19,
    CUSTOM_ATTR_MASK                 : 31,
    DECL_SECURITY_ACTION             : 0,
    DECL_SECURITY_PARENT             : 1,
    DECL_SECURITY_PERMISSIONSET      : 2,
    DECL_SECURITY_SIZE               : 3,
    END_DECLS                        : 1,
    EVENT_MAP_PARENT                 : 0,
    EVENT_FLAGS                      : 0,
    EVENT_POINTER_EVENT              : 0,
    EVENT_POINTER_SIZE               : 1,
    EVENT_NAME                       : 1,
    EVENT_MAP_EVENTLIST              : 1,
    EVENT_MAP_SIZE                   : 2,
    EVENT_TYPE                       : 2,
    EVENT_SIZE                       : 3,
    EXCEPTION_CLAUSE_NONE            : 0,
    EXCEPTION_CLAUSE_FILTER          : 1,
    EXCEPTION_CLAUSE_FINALLY         : 2,
    EXCEPTION_CLAUSE_FAULT           : 4,
    EXP_TYPE_FLAGS                   : 0,
    EXP_TYPE_TYPEDEF                 : 1,
    EXP_TYPE_NAME                    : 2,
    EXP_TYPE_NAMESPACE               : 3,
    EXP_TYPE_IMPLEMENTATION          : 4,
    EXP_TYPE_SIZE                    : 5,
    FIELD_FLAGS                      : 0,
    FIELD_LAYOUT_OFFSET              : 0,
    FIELD_POINTER_FIELD              : 0,
    FIELD_RVA_RVA                    : 0,
    FIELD_MARSHAL_PARENT             : 0,
    FIELD_NAME                       : 1,
    FIELD_MARSHAL_NATIVE_TYPE        : 1,
    FIELD_LAYOUT_FIELD               : 1,
    FIELD_RVA_FIELD                  : 1,
    FIELD_POINTER_SIZE               : 1,
    FIELD_RVA_SIZE                   : 2,
    FIELD_MARSHAL_SIZE               : 2,
    FIELD_SIGNATURE                  : 2,
    FIELD_LAYOUT_SIZE                : 2,
    FIELD_SIZE                       : 3,
    FILE_FLAGS                       : 0,
    FILE_NAME                        : 1,
    FILE_HASH_VALUE                  : 2,
    FILE_SIZE                        : 3,
    GENERICPARAM_NUMBER              : 0,
    GENERICPARAM_FLAGS               : 1,
    GENERICPARAM_OWNER               : 2,
    GENERICPARAM_NAME                : 3,
    GENERICPARAM_SIZE                : 4,
    GENPARCONSTRAINT_GENERICPAR      : 0,
    GENPARCONSTRAINT_CONSTRAINT      : 1,
    GENPARCONSTRAINT_SIZE            : 2,
    HAS_DECL_SECURITY_TYPEDEF        : 0,
    HAS_SEMANTICS_EVENT              : 0,
    HAS_FIELD_MARSHAL_FIELDSREF      : 0,
    HAS_FIELD_MARSHAL_PARAMDEF       : 1,
    HAS_FIELD_MARSHAL_BITS           : 1,
    HAS_SEMANTICS_MASK               : 1,
    HAS_DECL_SECURITY_METHODDEF      : 1,
    HAS_SEMANTICS_BITS               : 1,
    HAS_SEMANTICS_PROPERTY           : 1,
    HAS_FIELD_MARSHAL_MASK           : 1,
    HAS_DECL_SECURITY_BITS           : 2,
    HAS_DECL_SECURITY_ASSEMBLY       : 2,
    HAS_DECL_SECURITY_MASK           : 3,
    HASCONSTANT_FIEDDEF              : 0,
    HASCONSTANT_PARAM                : 1,
    HASCONSTANT_BITS                 : 2,
    HASCONSTANT_PROPERTY             : 2,
    HASCONSTANT_MASK                 : 3,
    IMAGE_OK                         : 0,
    IMAGE_ERROR_ERRNO                : 1,
    IMAGE_MISSING_ASSEMBLYREF        : 2,
    IMAGE_IMAGE_INVALID              : 3,
    IMPLEMENTATION_FILE              : 0,
    IMPLEMENTATION_ASSEMBLYREF       : 1,
    IMPLEMENTATION_BITS              : 2,
    IMPLEMENTATION_EXP_TYPE          : 2,
    IMPLEMENTATION_MASK              : 3,
    IMPLMAP_FLAGS                    : 0,
    IMPLMAP_MEMBER                   : 1,
    IMPLMAP_NAME                     : 2,
    IMPLMAP_SCOPE                    : 3,
    IMPLMAP_SIZE                     : 4,
    INTERFACEIMPL_CLASS              : 0,
    INTERFACEIMPL_INTERFACE          : 1,
    INTERFACEIMPL_SIZE               : 2,
    MANIFEST_OFFSET                  : 0,
    MANIFEST_FLAGS                   : 1,
    MANIFEST_NAME                    : 2,
    MANIFEST_IMPLEMENTATION          : 3,
    MANIFEST_SIZE                    : 4,
    MARSHAL_CONV_NONE                : 0,
    MARSHAL_CONV_BOOL_VARIANTBOOL    : 1,
    MARSHAL_CONV_BOOL_I4             : 2,
    MARSHAL_CONV_STR_BSTR            : 3,
    MARSHAL_CONV_STR_LPSTR           : 4,
    MARSHAL_CONV_LPSTR_STR           : 5,
    MARSHAL_CONV_LPTSTR_STR          : 6,
    MARSHAL_CONV_STR_LPWSTR          : 7,
    MARSHAL_CONV_LPWSTR_STR          : 8,
    MARSHAL_CONV_STR_LPTSTR          : 9,
    MARSHAL_CONV_STR_ANSIBSTR        : 10,
    MARSHAL_CONV_STR_TBSTR           : 11,
    MARSHAL_CONV_STR_BYVALSTR        : 12,
    MARSHAL_CONV_STR_BYVALWSTR       : 13,
    MARSHAL_CONV_SB_LPSTR            : 14,
    MARSHAL_CONV_SB_LPTSTR           : 15,
    MARSHAL_CONV_SB_LPWSTR           : 16,
    MARSHAL_CONV_LPSTR_SB            : 17,
    MARSHAL_CONV_LPTSTR_SB           : 18,
    MARSHAL_CONV_LPWSTR_SB           : 19,
    MARSHAL_CONV_ARRAY_BYVALARRAY    : 20,
    MARSHAL_CONV_ARRAY_BYVALCHARARRAY: 21,
    MARSHAL_CONV_ARRAY_SAVEARRAY     : 22,
    MARSHAL_CONV_ARRAY_LPARRAY       : 23,
    MARSHAL_FREE_LPARRAY             : 24,
    MARSHAL_CONV_OBJECT_INTERFACE    : 25,
    MARSHAL_CONV_OBJECT_IDISPATCH    : 26,
    MARSHAL_CONV_OBJECT_IUNKNOWN     : 27,
    MARSHAL_CONV_OBJECT_STRUCT       : 28,
    MARSHAL_CONV_DEL_FTN             : 29,
    MARSHAL_CONV_FTN_DEL             : 30,
    MARSHAL_FREE_ARRAY               : 31,
    MARSHAL_CONV_BSTR_STR            : 32,
    MARSHAL_CONV_SAFEHANDLE          : 33,
    MARSHAL_CONV_HANDLEREF           : 34,
    MEMBERFORWD_FIELDDEF             : 0,
    MEMBERFORWD_METHODDEF            : 1,
    MEMBERFORWD_BITS                 : 1,
    MEMBERFORWD_MASK                 : 1,
    MEMBERREF_PARENT_TYPEDEF         : 0,
    MEMBERREF_CLASS                  : 0,
    MEMBERREF_NAME                   : 1,
    MEMBERREF_PARENT_TYPEREF         : 1,
    MEMBERREF_SIGNATURE              : 2,
    MEMBERREF_PARENT_MODULEREF       : 2,
    MEMBERREF_PARENT_BITS            : 3,
    MEMBERREF_PARENT_METHODDEF       : 3,
    MEMBERREF_SIZE                   : 3,
    MEMBERREF_PARENT_TYPESPEC        : 4,
    MEMBERREF_PARENT_MASK            : 7,
    METHOD_POINTER_METHOD            : 0,
    METHOD_SEMA_SEMANTICS            : 0,
    METHOD_RVA                       : 0,
    METHOD_IMPLFLAGS                 : 1,
    METHOD_POINTER_SIZE              : 1,
    METHOD_SEMA_METHOD               : 1,
    METHOD_FLAGS                     : 2,
    METHOD_SEMA_ASSOCIATION          : 2,
    METHOD_NAME                      : 3,
    METHOD_SEMA_SIZE                 : 3,
    METHOD_SIGNATURE                 : 4,
    METHOD_PARAMLIST                 : 5,
    METHOD_SIZE                      : 6,
    METHODDEFORREF_METHODDEF         : 0,
    METHODDEFORREF_METHODREF         : 1,
    METHODDEFORREF_MASK              : 1,
    METHODDEFORREF_BITS              : 1,
    METHODIMPL_CLASS                 : 0,
    METHODIMPL_BODY                  : 1,
    METHODIMPL_DECLARATION           : 2,
    METHODIMPL_SIZE                  : 3,
    METHODSPEC_METHOD                : 0,
    METHODSPEC_SIGNATURE             : 1,
    METHODSPEC_SIZE                  : 2,
    MODULE_GENERATION                : 0,
    MODULE_NAME                      : 1,
    MODULE_MVID                      : 2,
    MODULE_ENC                       : 3,
    MODULE_ENCBASE                   : 4,
    MODULE_SIZE                      : 5,
    MODULEREF_NAME                   : 0,
    MODULEREF_SIZE                   : 1,
    NATIVE_BOOLEAN                   : 2,
    NATIVE_I1                        : 3,
    NATIVE_U1                        : 4,
    NATIVE_I2                        : 5,
    NATIVE_U2                        : 6,
    NATIVE_I4                        : 7,
    NATIVE_U4                        : 8,
    NATIVE_I8                        : 9,
    NATIVE_U8                        : 10,
    NATIVE_R4                        : 11,
    NATIVE_R8                        : 12,
    NATIVE_CURRENCY                  : 15,
    NATIVE_BSTR                      : 19,
    NATIVE_LPSTR                     : 20,
    NATIVE_LPWSTR                    : 21,
    NATIVE_LPTSTR                    : 22,
    NATIVE_BYVALTSTR                 : 23,
    NATIVE_IUNKNOWN                  : 25,
    NATIVE_IDISPATCH                 : 26,
    NATIVE_STRUCT                    : 27,
    NATIVE_INTERFACE                 : 28,
    NATIVE_SAFEARRAY                 : 29,
    NATIVE_BYVALARRAY                : 30,
    NATIVE_INT                       : 31,
    NATIVE_UINT                      : 32,
    NATIVE_VBBYREFSTR                : 34,
    NATIVE_ANSIBSTR                  : 35,
    NATIVE_TBSTR                     : 36,
    NATIVE_VARIANTBOOL               : 37,
    NATIVE_FUNC                      : 38,
    NATIVE_ASANY                     : 40,
    NATIVE_LPARRAY                   : 42,
    NATIVE_LPSTRUCT                  : 43,
    NATIVE_CUSTOM                    : 44,
    NATIVE_ERROR                     : 45,
    NATIVE_MAX                       : 80,
    NESTED_CLASS_NESTED              : 0,
    NESTED_CLASS_ENCLOSING           : 1,
    NESTED_CLASS_SIZE                : 2,
    PARAM_POINTER_PARAM              : 0,
    PARAM_FLAGS                      : 0,
    PARAM_POINTER_SIZE               : 1,
    PARAM_SEQUENCE                   : 1,
    PARAM_NAME                       : 2,
    PARAM_SIZE                       : 3,
    PARSE_TYPE                       : 0,
    PARSE_MOD_TYPE                   : 1,
    PARSE_LOCAL                      : 2,
    PARSE_PARAM                      : 3,
    PARSE_RET                        : 4,
    PARSE_FIELD                      : 5,
    PROPERTY_POINTER_PROPERTY        : 0,
    PROPERTY_MAP_PARENT              : 0,
    PROPERTY_FLAGS                   : 0,
    PROPERTY_NAME                    : 1,
    PROPERTY_POINTER_SIZE            : 1,
    PROPERTY_MAP_PROPERTY_LIST       : 1,
    PROPERTY_TYPE                    : 2,
    PROPERTY_MAP_SIZE                : 2,
    PROPERTY_SIZE                    : 3,
    RESOLTION_SCOPE_MODULE           : 0,
    RESOLTION_SCOPE_MODULEREF        : 1,
    RESOLTION_SCOPE_BITS             : 2,
    RESOLTION_SCOPE_ASSEMBLYREF      : 2,
    RESOLTION_SCOPE_MASK             : 3,
    RESOLTION_SCOPE_TYPEREF          : 3,
    STAND_ALONE_SIGNATURE            : 0,
    STAND_ALONE_SIGNATURE_SIZE       : 1,
    TABLE_MODULE                     : 0,
    TABLE_TYPEREF                    : 1,
    TABLE_TYPEDEF                    : 2,
    TABLE_FIELD_POINTER              : 3,
    TABLE_FIELD                      : 4,
    TABLE_METHOD_POINTER             : 5,
    TABLE_METHOD                     : 6,
    TABLE_PARAM_POINTER              : 7,
    TABLE_PARAM                      : 8,
    TABLE_INTERFACEIMPL              : 9,
    TABLE_MEMBERREF                  : 10,
    TABLE_CONSTANT                   : 11,
    TABLE_CUSTOMATTRIBUTE            : 12,
    TABLE_FIELDMARSHAL               : 13,
    TABLE_DECLSECURITY               : 14,
    TABLE_CLASSLAYOUT                : 15,
    TABLE_FIELDLAYOUT                : 16,
    TABLE_STANDALONESIG              : 17,
    TABLE_EVENTMAP                   : 18,
    TABLE_EVENT_POINTER              : 19,
    TABLE_EVENT                      : 20,
    TABLE_PROPERTYMAP                : 21,
    TABLE_PROPERTY_POINTER           : 22,
    TABLE_PROPERTY                   : 23,
    TABLE_METHODSEMANTICS            : 24,
    TABLE_METHODIMPL                 : 25,
    TABLE_MODULEREF                  : 26,
    TABLE_TYPESPEC                   : 27,
    TABLE_IMPLMAP                    : 28,
    TABLE_FIELDRVA                   : 29,
    TABLE_UNUSED6                    : 30,
    TABLE_UNUSED7                    : 31,
    TABLE_ASSEMBLY                   : 32,
    TABLE_ASSEMBLYPROCESSOR          : 33,
    TABLE_ASSEMBLYOS                 : 34,
    TABLE_ASSEMBLYREF                : 35,
    TABLE_ASSEMBLYREFPROCESSOR       : 36,
    TABLE_ASSEMBLYREFOS              : 37,
    TABLE_FILE                       : 38,
    TABLE_EXPORTEDTYPE               : 39,
    TABLE_MANIFESTRESOURCE           : 40,
    TABLE_NESTEDCLASS                : 41,
    TABLE_GENERICPARAM               : 42,
    TABLE_METHODSPEC                 : 43,
    TABLE_LAST                       : 44,
    TABLE_GENERICPARAMCONSTRAINT     : 44,
    TYPE_END                         : 0,
    TYPE_VOID                        : 1,
    TYPE_BOOLEAN                     : 2,
    TYPE_CHAR                        : 3,
    TYPE_I1                          : 4,
    TYPE_U1                          : 5,
    TYPE_I2                          : 6,
    TYPE_U2                          : 7,
    TYPE_I4                          : 8,
    TYPE_U4                          : 9,
    TYPE_I8                          : 10,
    TYPE_U8                          : 11,
    TYPE_R4                          : 12,
    TYPE_R8                          : 13,
    TYPE_STRING                      : 14,
    TYPE_PTR                         : 15,
    TYPE_BYREF                       : 16,
    TYPE_VALUETYPE                   : 17,
    TYPE_CLASS                       : 18,
    TYPE_VAR                         : 19,
    TYPE_ARRAY                       : 20,
    TYPE_GENERICINST                 : 21,
    TYPE_TYPEDBYREF                  : 22,
    TYPE_I                           : 24,
    TYPE_U                           : 25,
    TYPE_FNPTR                       : 27,
    TYPE_OBJECT                      : 28,
    TYPE_SZARRAY                     : 29,
    TYPE_MVAR                        : 30,
    TYPE_CMOD_REQD                   : 31,
    TYPE_CMOD_OPT                    : 32,
    TYPE_INTERNAL                    : 33,
    TYPE_MODIFIER                    : 64,
    TYPE_SENTINEL                    : 65,
    TYPE_PINNED                      : 69,
    TYPE_ENUM                        : 85,
    TYPEDEF_FLAGS                    : 0,
    TYPEDEF_NAME                     : 1,
    TYPEDEF_NAMESPACE                : 2,
    TYPEDEF_EXTENDS                  : 3,
    TYPEDEF_FIELD_LIST               : 4,
    TYPEDEF_METHOD_LIST              : 5,
    TYPEDEF_SIZE                     : 6,
    TYPEDEFORREF_TYPEDEF             : 0,
    TYPEDEFORREF_TYPEREF             : 1,
    TYPEDEFORREF_TYPESPEC            : 2,
    TYPEDEFORREF_BITS                : 2,
    TYPEDEFORREF_MASK                : 3,
    TYPEORMETHOD_TYPE                : 0,
    TYPEORMETHOD_METHOD              : 1,
    TYPEORMETHOD_MASK                : 1,
    TYPEORMETHOD_BITS                : 1,
    TYPEREF_SCOPE                    : 0,
    TYPEREF_NAME                     : 1,
    TYPEREF_NAMESPACE                : 2,
    TYPEREF_SIZE                     : 3,
    TYPESPEC_SIGNATURE               : 0,
    TYPESPEC_SIZE                    : 1,
    VARIANT_EMPTY                    : 0,
    VARIANT_NULL                     : 1,
    VARIANT_I2                       : 2,
    VARIANT_I4                       : 3,
    VARIANT_R4                       : 4,
    VARIANT_R8                       : 5,
    VARIANT_CY                       : 6,
    VARIANT_DATE                     : 7,
    VARIANT_BSTR                     : 8,
    VARIANT_DISPATCH                 : 9,
    VARIANT_ERROR                    : 10,
    VARIANT_BOOL                     : 11,
    VARIANT_VARIANT                  : 12,
    VARIANT_UNKNOWN                  : 13,
    VARIANT_DECIMAL                  : 14,
    VARIANT_I1                       : 16,
    VARIANT_UI1                      : 17,
    VARIANT_UI2                      : 18,
    VARIANT_UI4                      : 19,
    VARIANT_I8                       : 20,
    VARIANT_UI8                      : 21,
    VARIANT_INT                      : 22,
    VARIANT_UINT                     : 23,
    VARIANT_VOID                     : 24,
    VARIANT_HRESULT                  : 25,
    VARIANT_PTR                      : 26,
    VARIANT_SAFEARRAY                : 27,
    VARIANT_CARRAY                   : 28,
    VARIANT_USERDEFINED              : 29,
    VARIANT_LPSTR                    : 30,
    VARIANT_LPWSTR                   : 31,
    VARIANT_RECORD                   : 36,
    VARIANT_FILETIME                 : 64,
    VARIANT_BLOB                     : 65,
    VARIANT_STREAM                   : 66,
    VARIANT_STORAGE                  : 67,
    VARIANT_STREAMED_OBJECT          : 68,
    VARIANT_STORED_OBJECT            : 69,
    VARIANT_BLOB_OBJECT              : 70,
    VARIANT_CF                       : 71,
    VARIANT_CLSID                    : 72,
    VARIANT_VECTOR                   : 4096,
    VARIANT_ARRAY                    : 8192,
    VARIANT_BYREF                    : 16384,
    ZERO_LEN_ARRAY                   : 0,
}; // constants

/** @enum {int} */
var MetaType = {
    UINT32    : 1,
    UINT16    : 2,
    UINT8     : 3,
    BLOB_IDX  : 4,
    STRING_IDX: 5,
    GUID_IDX  : 6,
    TABLE_IDX : 7,
    CONST_IDX : 8,
    HASCAT_IDX: 9,
    CAT_IDX   : 10,
    HASDEC_IDX: 11,
    IMPL_IDX  : 12,
    HFM_IDX   : 13,
    MF_IDX    : 14,
    TDOR_IDX  : 15,
    MRP_IDX   : 16,
    MDOR_IDX  : 17,
    HS_IDX    : 18,
    RS_IDX    : 19,
}; // end of enum MetaType

/** @const {Array} */
var TableSchema = [
    { // TABLE_MODULE
        name: "Module",
        id:    C.TABLE_MODULE,
        fields: [
            "Generation",
            "Name",
            "MVID",
            "EncID",
            "EncBaseID",
        ],
        field_type: [
            MetaType.UINT16,
            MetaType.STRING_IDX,
            MetaType.GUID_IDX,
            MetaType.GUID_IDX,
            MetaType.GUID_IDX,
        ],
    },
    { // TABLE_TYPEREF
        name: "TypeRef",
        id:    C.TABLE_TYPEREF,
        fields: [
            "Name",
            "Namespace",
        ],
        field_type: [
            MetaType.STRING_IDX,
            MetaType.STRING_IDX,
        ],
    },
    { // TABLE_TYPEDEF
        name: "TypeDef",
        id:    C.TABLE_TYPEDEF,
        fields: [
            "Flags",
            "Name",
            "Namespace",
            "Extends",
        ],
        field_type: [
            MetaType.UINT32,
            MetaType.STRING_IDX,
            MetaType.STRING_IDX,
            MetaType.TDOR_IDX,
        ],
    },
    { // TABLE_FIELD_POINTER
        name: "FieldPtr",
        id:    C.TABLE_FIELD_POINTER,
        fields: [
            "Field",
        ],
        field_type: [
            MetaType.TABLE_IDX,
        ],
    },
    { // TABLE_FIELD
        name: "Field",
        id:    C.TABLE_FIELD,
        fields: [
            "Flags",
            "Name",
            "Signature",
        ],
        field_type: [
            MetaType.UINT16,
            MetaType.STRING_IDX,
            MetaType.BLOB_IDX,
        ],
    },
    { // TABLE_METHOD_POINTER
        name: "MethodPtr",
        id:    C.TABLE_METHOD_POINTER,
        fields: [
            "Method",
        ],
        field_type: [
            MetaType.TABLE_IDX,
        ],
    },
    { // TABLE_METHOD
        name: "Method",
        id:    C.TABLE_METHOD,
        fields: [
            "RVA",
            "Name",
            "Signature",
        ],
        field_type: [
            MetaType.UINT32,
            MetaType.STRING_IDX,
            MetaType.BLOB_IDX,
        ],
    },
    { // TABLE_PARAM_POINTER
        name: "ParamPtr",
        id:    C.TABLE_PARAM_POINTER,
        fields: [
            "Param",
        ],
        field_type: [
            MetaType.TABLE_IDX,
        ],
    },
    { // TABLE_PARAM
        name: "Param",
        id:    C.TABLE_PARAM,
        fields: [
            "Flags",
            "Sequence",
            "Name",
        ],
        field_type: [
            MetaType.UINT16,
            MetaType.UINT16,
            MetaType.STRING_IDX,
        ],
    },
    { // TABLE_INTERFACEIMPL
        name: "InterfaceImpl",
        id:    C.TABLE_INTERFACEIMPL,
        fields: [
        ],
        field_type: [
        ],
    },
    { // TABLE_MEMBERREF
        name: "MemberRef",
        id:    C.TABLE_MEMBERREF,
        fields: [
            "Class",
            "Name",
            "Signature",
        ],
        field_type: [
            MetaType.MRP_IDX,
            MetaType.STRING_IDX,
            MetaType.BLOB_IDX,
        ],
    },
    { // TABLE_CONSTANT
        name: "Constant",
        id:    C.TABLE_CONSTANT,
        fields: [
            "Type",
            "PaddingZero",
            "Parent",
            "Value",
        ],
        field_type: [
            MetaType.UINT8,
            MetaType.UINT8,
            MetaType.CONST_IDX,
            MetaType.BLOB_IDX,
        ],
    },
    { // TABLE_CUSTOMATTRIBUTE
        name: "CustomAttribute",
        id:    C.TABLE_CUSTOMATTRIBUTE,
        fields: [
            "Parent",
            "Type",
            "Value",
        ],
        field_type: [
            MetaType.HASCAT_IDX,
            MetaType.CAT_IDX,
            MetaType.BLOB_IDX,
        ],
    },
    { // TABLE_FIELDMARSHAL
        name: "FieldMarshal",
        id:    C.TABLE_FIELDMARSHAL,
        fields: [
            "Parent",
            "NativeType",
        ],
        field_type: [
            MetaType.HFM_IDX,
            MetaType.BLOB_IDX,
        ],
    },
    { // TABLE_DECLSECURITY
        name: "DeclSecurity",
        id:    C.TABLE_DECLSECURITY,
        fields: [
            "Action",
            "Parent",
            "PermissionSet",
        ],
        field_type: [
            MetaType.UINT16,
            MetaType.HASDEC_IDX,
            MetaType.BLOB_IDX,
        ],
    },
    { // TABLE_CLASSLAYOUT
        name: "ClassLayout",
        id:    C.TABLE_CLASSLAYOUT,
        fields: [
            "PackingSize",
            "ClassSize",
        ],
        field_type: [
            MetaType.UINT16,
            MetaType.UINT32,
        ],
    },
    { // TABLE_FIELDLAYOUT
        name: "FieldLayoutt",
        id:    C.TABLE_FIELDLAYOUT,
        fields: [
            "Offset",
        ],
        field_type: [
            MetaType.UINT32,
        ],
    },
    { // TABLE_STANDALONESIG
        name: "StandaloneSig",
        id:    C.TABLE_STANDALONESIG,
        fields: [
            "Signature",
        ],
        field_type: [
            MetaType.BLOB_IDX,
        ],
    },
    { // TABLE_EVENTMAP
        name: "EventMap",
        id:    C.TABLE_EVENTMAP,
        fields: [
        ],
        field_type: [
        ],
    },
    { // TABLE_EVENT_POINTER
        name: "EventPtr",
        id:    C.TABLE_EVENT_POINTER,
        fields: [
            "Event",
        ],
        field_type: [
            MetaType.TABLE_IDX,
        ],
    },
    { // TABLE_EVENT
        name: "Event",
        id:    C.TABLE_EVENT,
        fields: [
            "Name",
            "EventType",
        ],
        field_type: [
            MetaType.STRING_IDX,
            MetaType.TDOR_IDX,
        ],
    },
    { // TABLE_PROPERTYMAP
        name: "PropertyMap",
        id:    C.TABLE_PROPERTYMAP,
        fields: [
        ],
        field_type: [
        ],
    },
    { // TABLE_PROPERTY_POINTER
        name: "PropertyPtr",
        id:    C.TABLE_PROPERTY_POINTER,
        fields: [
            "Property",
        ],
        field_type: [
            MetaType.TABLE_IDX,
        ],
    },
    { // TABLE_PROPERTY
        name: "Property",
        id:    C.TABLE_PROPERTY,
        fields: [
            "Flags",
            "Name",
            "Type",
        ],
        field_type: [
            MetaType.UINT16,
            MetaType.STRING_IDX,
            MetaType.BLOB_IDX,
        ],
    },
    { // TABLE_METHODSEMANTICS
        name: "MethodSemantics",
        id:    C.TABLE_METHODSEMANTICS,
        fields: [
            "MethodSemantic",
            "Association",
        ],
        field_type: [
            MetaType.UINT16,
            MetaType.HS_IDX,
        ],
    },
    { // TABLE_METHODIMPL
        name: "MethodImpl",
        id:    C.TABLE_METHODIMPL,
        fields: [
            "MethodBody",
            "MethodDeclaration",
        ],
        field_type: [
            MetaType.MDOR_IDX,
            MetaType.MDOR_IDX,
        ],
    },
    { // TABLE_MODULEREF
        name: "Moduleref",
        id:    C.TABLE_MODULEREF,
        fields: [
            "Name",
        ],
        field_type: [
            MetaType.STRING_IDX,
        ],
    },
    { // TABLE_TYPESPEC
        name: "TypeSpec",
        id:    C.TABLE_TYPESPEC,
        fields: [
            "Signature",
        ],
        field_type: [
            MetaType.BLOB_IDX,
        ],
    },
    { // TABLE_IMPLMAP
        name: "ImplMap",
        id:    C.TABLE_IMPLMAP,
        fields: [
            "MappingFlag",
            "MemberForwarded",
            "ImportName",
        ],
        field_type: [
            MetaType.UINT16,
            MetaType.MF_IDX,
            MetaType.STRING_IDX,
        ],
    },
    { // TABLE_FIELDRVA
        name: "FieldRVA",
        id:    C.TABLE_FIELDRVA,
        fields: [
            "RVA",
        ],
        field_type: [
            MetaType.UINT32,
        ],
    },
    { // TABLE_UNUSED6
        name: "",
        id:    C.TABLE_UNUSED6,
        fields: [
        ],
        field_type: [
        ],
    },
    { // TABLE_UNUSED7
        name: "",
        id:    C.TABLE_UNUSED7,
        fields: [
        ],
        field_type: [
        ],
    },
    { // TABLE_ASSEMBLY
        name: "Assembly",
        id:    C.TABLE_ASSEMBLY,
        fields: [
            "HashId",
            "Major",
            "Minor",
            "BuildNumber",
            "RevisionNumber",
            "Flags",
            "PublicKey",
            "Name",
            "Culture",
        ],
        field_type: [
            MetaType.UINT32,
            MetaType.UINT16,
            MetaType.UINT16,
            MetaType.UINT16,
            MetaType.UINT16,
            MetaType.UINT32,
            MetaType.BLOB_IDX,
            MetaType.STRING_IDX,
            MetaType.STRING_IDX,
        ],
    },
    { // TABLE_ASSEMBLYPROCESSOR
        name: "AssemblyProcessor",
        id:    C.TABLE_ASSEMBLYPROCESSOR,
        fields: [
            "Processor",
        ],
        field_type: [
            MetaType.UINT32,
        ],
    },
    { // TABLE_ASSEMBLYOS
        name: "AssemblyOS",
        id:    C.TABLE_ASSEMBLYOS,
        fields: [
            "OSPlatformID",
            "OSMajor",
            "OSMinor",
        ],
        field_type: [
            MetaType.UINT32,
            MetaType.UINT32,
            MetaType.UINT32,
        ],
    },
    { // TABLE_ASSEMBLYREF
        name: "AssemblyRef",
        id:    C.TABLE_ASSEMBLYREF,
        fields: [
            "Major",
            "Minor",
            "Build",
            "Revision",
            "Flags",
            "PublicKeyOrToken",
            "Name",
            "Culture",
            "HashValue",
        ],
        field_type: [
            MetaType.UINT16,
            MetaType.UINT16,
            MetaType.UINT16,
            MetaType.UINT16,
            MetaType.UINT32,
            MetaType.BLOB_IDX,
            MetaType.STRING_IDX,
            MetaType.STRING_IDX,
            MetaType.BLOB_IDX,
        ],
    },
    { // TABLE_ASSEMBLYREFPROCESSOR
        name: "AssemblyRefProcessor",
        id:    C.TABLE_ASSEMBLYREFPROCESSOR,
        fields: [
            "Processor",
        ],
        field_type: [
            MetaType.UINT32,
        ],
    },
    { // TABLE_ASSEMBLYREFOS
        name: "AssemblyRefOS",
        id:    C.TABLE_ASSEMBLYREFOS,
        fields: [
            "OSPlatformID",
            "OSMajorVersion",
            "OSMinorVersion",
        ],
        field_type: [
            MetaType.UINT32,
            MetaType.UINT32,
            MetaType.UINT32,
        ],
    },
    { // TABLE_FILE
        name: "File",
        id:    C.TABLE_FILE,
        fields: [
            "Flags",
            "Name",
            "Value",
        ],
        field_type: [
            MetaType.UINT32,
            MetaType.STRING_IDX,
            MetaType.BLOB_IDX,
        ],
    },
    { // TABLE_EXPORTEDTYPE
        name: "ExportedType",
        id:    C.TABLE_EXPORTEDTYPE,
        fields: [
            "Flags",
            "TypeDefId",
            "TypeName",
            "TypeNameSpace",
            "Implementation",
        ],
        field_type: [
            MetaType.UINT32,
            MetaType.TABLE_IDX,
            MetaType.STRING_IDX,
            MetaType.STRING_IDX,
            MetaType.IMPL_IDX,
        ],
    },
    { // TABLE_MANIFESTRESOURCE
        name: "ManifestResource",
        id:    C.TABLE_MANIFESTRESOURCE,
        fields: [
            "Offset",
            "Flags",
            "Name",
            "Implementation",
        ],
        field_type: [
            MetaType.UINT32,
            MetaType.UINT32,
            MetaType.STRING_IDX,
            MetaType.IMPL_IDX,
        ],
    },
    { // TABLE_NESTEDCLASS
        name: "NestedClass",
        id:    C.TABLE_NESTEDCLASS,
        fields: [
        ],
        field_type: [
        ],
    },
    { // TABLE_GENERICPARAM
        name: "GenericParam",
        id:    C.TABLE_GENERICPARAM,
        fields: [
            "Number",
            "Flags",
            "Owner",
            "Name",
        ],
        field_type: [
            MetaType.UINT16,
            MetaType.UINT16,
            MetaType.TABLE_IDX,
            MetaType.STRING_IDX,
        ],
    },
    { // TABLE_METHODSPEC
        name: "MethodSpec",
        id:    C.TABLE_METHODSPEC,
        fields: [
            "Method",
            "Signature",
        ],
        field_type: [
            MetaType.MDOR_IDX,
            MetaType.BLOB_IDX,
        ],
    },
    { // TABLE_GENERICPARAMCONSTRAINT
        name: "GenericParamConstraint",
        id:    C.TABLE_GENERICPARAMCONSTRAINT,
        fields: [
            "GenericParam",
            "Constraint",
        ],
        field_type: [
            MetaType.TABLE_IDX,
            MetaType.TDOR_IDX,
        ],
    },
]; // end of TableSchema
exports.TableSchema = TableSchema;
exports.MetaType    = MetaType;
exports.C           = C;
